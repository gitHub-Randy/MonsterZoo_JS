/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/Controller/MainController.js":
/*!******************************************!*\
  !*** ./src/Controller/MainController.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return mainController; });\n/* harmony import */ var _View_MonsterZooView_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../View/MonsterZooView.js */ \"./src/View/MonsterZooView.js\");\n/* harmony import */ var _Model_WaterMonster_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Model/WaterMonster.js */ \"./src/Model/WaterMonster.js\");\n/* harmony import */ var _Model_FireMonster_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Model/FireMonster.js */ \"./src/Model/FireMonster.js\");\n/* harmony import */ var _Model_EarthMonster_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../Model/EarthMonster.js */ \"./src/Model/EarthMonster.js\");\n/* harmony import */ var _Model_WindMonster_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Model/WindMonster.js */ \"./src/Model/WindMonster.js\");\n/* harmony import */ var _View_configurator_view_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../View/configurator-view.js */ \"./src/View/configurator-view.js\");\n/* harmony import */ var _View_weather_view_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../View/weather-view.js */ \"./src/View/weather-view.js\");\n/* harmony import */ var _Model_weatherModel_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../Model/weatherModel.js */ \"./src/Model/weatherModel.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass mainController {\r\n    constructor() {\r\n        localStorage.clear();\r\n        this.monsterConfigView = new _View_configurator_view_js__WEBPACK_IMPORTED_MODULE_5__[\"default\"](this);\r\n        this.monsterZoo = new _View_MonsterZooView_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"](this);\r\n        this.weatherView = new _View_weather_view_js__WEBPACK_IMPORTED_MODULE_6__[\"default\"](this);\r\n        this.weatherModel = new _Model_weatherModel_js__WEBPACK_IMPORTED_MODULE_7__[\"default\"]();\r\n        this.monstersInZoo = [];\r\n    }\r\n\r\n    CreateMonsterConfigurator(value) {\r\n        switch (value) {\r\n            case \"WaterType\":\r\n                this.monster = new _Model_WaterMonster_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"]();\r\n                break;\r\n            case \"FireType\":\r\n                this.monster = new _Model_FireMonster_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\r\n                break;\r\n            case \"EarthType\":\r\n                this.monster = new _Model_EarthMonster_js__WEBPACK_IMPORTED_MODULE_3__[\"default\"]();\r\n                break;\r\n            case \"WindType\":\r\n                this.monster = new _Model_WindMonster_js__WEBPACK_IMPORTED_MODULE_4__[\"default\"]();\r\n                break;\r\n        }\r\n        let n = this.monstersInZoo.length;\r\n        this.monstersInZoo[n] = this.monster;\r\n\r\n    }\r\n\r\n    getMonsterInformation(monsterInformation) {\r\n        for (let i = 0; i < this.monstersInZoo.length; i++) {\r\n            if (monsterInformation === this.monstersInZoo[i].getMonsterInformation()) {\r\n                return this.monstersInZoo[i]\r\n            }\r\n        }\r\n    }\r\n\r\n    updateMonster() {\r\n        let inputs = this.getAllInputs();\r\n        for (let i = 0; i < inputs.length; i++) {\r\n            this.monster = this.monster.updateMonster(inputs[i].id, inputs[i].value);\r\n        }\r\n        let temp = this.weatherModel.temperature;\r\n        let gridSelect = document.getElementById(\"gridSelect\");\r\n        let zone = gridSelect.options[gridSelect.selectedIndex].text;\r\n\r\n        let wind = this.weatherModel.windSpeed;\r\n        let condition = this.weatherModel.weatherCondition;\r\n        this.monster.calculateSpecialStats(temp, zone, wind, condition);\r\n        this.updateMonsterZone(this.monster);\r\n    }\r\n\r\n    updateMonsterZone(monster) {\r\n        let z = document.querySelector(\".gridSelector\").value;\r\n        monster.updateMonster(\"Zone\", z);\r\n    }\r\n\r\n    updateMonsterLocation(id,monster) {\r\n        monster.updateMonster(\"Location\", id);\r\n    }\r\n\r\n    updateWeather(response) {\r\n        let temp = response.main.temp;\r\n        let wind = response.wind.speed;\r\n        let condition = response.weather[0].main;\r\n        this.weatherModel.updateWeather(temp, wind, condition);\r\n    }\r\n\r\n\r\n    updateWeatherManual(){\r\n        this.weatherModel.updateWeather(temp, wind, condition);\r\n\r\n    }\r\n\r\n    getAllInputs() {\r\n        let inputArray = [];\r\n        inputArray[0] = document.getElementById(\"AmountArms\");\r\n        inputArray[1] = document.getElementById(\"ArmType\");\r\n        inputArray[2] = document.getElementById(\"AmountFeet\");\r\n        inputArray[3] = document.getElementById(\"AmountEyes\");\r\n        inputArray[4] = document.getElementById(\"FurType\");\r\n        inputArray[5] = document.getElementById(\"Fly\");\r\n        inputArray[6] = document.getElementById(\"Swim\");\r\n        inputArray[7] = document.getElementById(\"Color\");\r\n        inputArray[8] = document.getElementById(\"Name\");\r\n\r\n        return inputArray;\r\n    }\r\n\r\n    recoverBoard(zone) {\r\n        this.monstersInZoo = [];\r\n\r\n        for (let i = 0; i < localStorage.length; i++) {\r\n            let key = localStorage.key(i);\r\n            let value = localStorage.getItem(key);\r\n            let jsonValue = JSON.parse(value);\r\n            if (zone === jsonValue.zone) {\r\n                this.CreateMonsterConfigurator(jsonValue.type + \"Type\");\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"AmountArms\", jsonValue.AmountArms);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"ArmType\", jsonValue.TypeArms);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"AmountFeet\", jsonValue.AmountFeet);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"AmountEyes\", jsonValue.AmountEyes);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"FurType\", jsonValue.FurType);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"Color\", jsonValue.Color);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"Name\", jsonValue.monsterName);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"Zone\", jsonValue.zone);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"Location\", jsonValue.location);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"Power\", jsonValue.power);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"ExtraPower\", jsonValue.extraPower);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"Attack\", jsonValue.specialAttack);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"Fly\", jsonValue.CanFly);\r\n                this.monstersInZoo[this.monstersInZoo.length - 1].updateMonster(\"Swim\", jsonValue.CanSwim);\r\n\r\n                this.monsterConfigView.RecoverMonster(this.monstersInZoo[this.monstersInZoo.length - 1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    saveMonstersInLocalStorage() {\r\n        for (let i = 0; i < this.monstersInZoo.length; i++) {\r\n\r\n            this.monstersInZoo[i].saveInLocalStorage();\r\n        }\r\n    }\r\n\r\n    checkMonsterName(name) {\r\n        if (localStorage.getItem(name)) {\r\n         return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    deleteMonster(title) {\r\n        for (let i = 0; i < this.monstersInZoo.length; i++) {\r\n            if (title == this.monstersInZoo[i].getMonsterInformation()) {\r\n                let monsterName = this.monstersInZoo[i].monsterName;\r\n                localStorage.removeItem(monsterName);\r\n                for (let x = i; x < this.monstersInZoo.length; x++) {\r\n                    this.monstersInZoo[x] = this.monstersInZoo[x + 1]\r\n                }\r\n                this.monstersInZoo.length -= 1;\r\n\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n}\n\n//# sourceURL=webpack:///./src/Controller/MainController.js?");

/***/ }),

/***/ "./src/Model/EarthMonster.js":
/*!***********************************!*\
  !*** ./src/Model/EarthMonster.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return EarthMonster; });\n/* harmony import */ var _Monster_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Monster.js */ \"./src/Model/Monster.js\");\n\n\n'use strict';\nclass EarthMonster extends _Monster_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.type = 'Earth';\n        this.amountArms = 2;\n        this.AmountEyes = 2;\n        this.CanFly = false;\n        this.CanSwim = false;\n        this.TypeArms = 'Claws';\n\n\n        this.TYPE = {EARTH: \"Earth\"};\n        this.AmountFeet = {2: 2, 4: 4, 6: 6};\n        this.FurType = {SCALES: \"Scales\", SLIME: \"SLime\", HAIR: \"Hair\"};\n        this.Color = {PURPLE: \"Purple\", ORANGE: \"Orange\", WHITE: \"White\"};\n        this.audioFile = \"../src/audioFiles/Earthquake.wav\";\n    }\n\n    updateMonster(parameter, value) {\n        switch (parameter) {\n            case \"AmountFeet\":\n                this.AmountFeet = value;\n                break;\n            case \"FurType\":\n                this.FurType = value;\n                break;\n            case \"Color\":\n                this.Color = value;\n                break;\n            case \"Name\":\n                this.monsterName = value;\n                break;\n            case \"Zone\":\n                this.zone = value;\n                break;\n            case \"Location\":\n                this.location = value;\n                break;\n            case \"Power\":\n                this.power = value;\n                break;\n            case \"ExtraPower\":\n                this.extraPower = value;\n                break;\n            case \"Attack\":\n                this.specialAttack = value;\n                break;\n            default:\n                break;\n        }\n\n        return this;\n    }\n\n    calculateSpecialStats(temperature, zone, windStrength, weatherCondition) {\n        if (!weatherCondition.includes(\"Rain\")) {\n            this.extraPower = 10;\n\n        }\n        if (zone == \"North Pole\") {\n            this.extraPower = 0;\n            this.power -= 5;\n        }\n\n        if (this.power + this.extraPower > 10) {\n            this.specialAttack = \"Rock n Roll\";\n        }\n    }\n}\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/Model/EarthMonster.js?");

/***/ }),

/***/ "./src/Model/FireMonster.js":
/*!**********************************!*\
  !*** ./src/Model/FireMonster.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return FireMonster; });\n/* harmony import */ var _Monster_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Monster.js */ \"./src/Model/Monster.js\");\n\n\n'use strict';\nclass FireMonster extends _Monster_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.type = 'Fire';\n\n        this.AmountArms = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6};\n        this.TypeArms = {TENTAKELS: \"Tentakels\", CLAWS: \"Claws\", CLAWWINGS: \"Claw-Wings\"};\n        // 2 feet but only when ther are 2 or less arms\n        this.AmountFeet = {0: 0, 1: 1, 2: 2};\n        this.AmountEyes = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4};\n        this.FurType = {SCALES: \"Scales\", FEATHERS: \"Feathers\"};\n        //only if feathers\n        this.CanFly = {TRUE: true, FALSE: false};\n        this.CanSwim = false;\n        this.Color = {ORANGE: \"Orange\", RED: \"Red\", Brown: \"Brown\"};\n\n        this.audioFile = \"../src/audioFiles/flamethrower.wav\";\n\n    }\n\n    updateMonster(parameter, value) {\n        switch (parameter) {\n            case \"AmountArms\":\n                this.AmountArms = value;\n                break;\n            case \"ArmType\":\n                this.TypeArms = value;\n                break;\n            case \"AmountFeet\":\n                this.AmountFeet = value;\n                break;\n            case \"AmountEyes\":\n                this.AmountEyes = value;\n                break;\n            case \"FurType\":\n                this.FurType = value;\n                break;\n            case \"Fly\":\n                this.CanFly = value;\n                break;\n            case \"Color\":\n                this.Color = value;\n                break;\n            case \"Name\":\n                this.monsterName = value;\n                break;\n            case \"Zone\":\n                this.zone = value;\n                break;\n            case \"Location\":\n                this.location = value;\n                break;\n            case \"Power\":\n                this.power = value;\n                break;\n            case \"ExtraPower\":\n                this.extraPower = value;\n                break;\n            case \"Attack\":\n                this.specialAttack = value;\n                break;\n            default:\n                break;\n        }\n        return this;\n    }\n\n    calculateSpecialStats(temperature, zone, windStrength, weatherCondition) {\n        if (temperature > \"20\") {\n            this.extraPower = 10;\n\n        }\n        if (weatherCondition.includes(\"Rain\")) {\n            this.extraPower = 0;\n            this.power -= 5;\n        }\n\n        if (this.power + this.extraPower > 10) {\n            this.specialAttack = \"Fire Burst\";\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./src/Model/FireMonster.js?");

/***/ }),

/***/ "./src/Model/Monster.js":
/*!******************************!*\
  !*** ./src/Model/Monster.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Monster; });\n\nclass Monster {\n    constructor() {\n        this.type = '';\n        this.TypeArms = '';\n        this.AmountArms = 'sdafasfd';\n        this.AmountFeet = '';\n        this.AmountEyes = '';\n        this.FurType = '';\n        this.CanFly = '';\n        this.CanSwim = '';\n        this.Color = '';\n        this.monsterName = '';\n        this.power = Math.floor(Math.random() * 20) + 1;\n        this.extraPower = 0;\n        this.specialAttack = \"none\";\n        this.location = 0;\n        this.zone = \"\";\n    }\n\n    getMonsterInformation() {\n        let informationText = `Type: ${this.type} \\n`;\n        informationText += `Name: ${this.monsterName} \\n`;\n        informationText += `Base Power: ${this.power} \\n`;\n        informationText += `Extra Power: ${this.extraPower} \\n`;\n        informationText += `Special Attack: ${this.specialAttack} \\n`;\n\n        if (this.TypeArms) {\n            informationText += `Arm Type: ${this.TypeArms} \\n`;\n        }\n\n        if (this.AmountArms) {\n            informationText += `Amount Arms: ${this.AmountArms} \\n`;\n        }\n\n        if (this.AmountFeet) {\n            informationText += `Amount Feet: ${this.AmountFeet} \\n`;\n        }\n\n        if (this.AmountEyes) {\n            informationText += `Amount Eyes: ${this.AmountEyes} \\n`;\n        }\n\n        if (this.FurType) {\n            informationText += `Fur Type: ${this.FurType} \\n`;\n        }\n\n        if (this.CanFly) {\n            informationText += `Can Fly: ${this.CanFly} \\n`;\n        }\n\n        if (this.CanSwim) {\n            informationText += `Can Swim: ${this.CanSwim} \\n`;\n        }\n\n        if (this.Color) {\n            informationText += `Color: ${this.Color} \\n`;\n        }\n        return informationText;\n    }\n\n    calculateSpecialStats(temperature, zone, windStrength, weatherCondition) {\n\n    }\n\n    saveInLocalStorage() {\n        localStorage.setItem(this.monsterName, JSON.stringify(this));\n    }\n\n\n}\n\n\n\n//# sourceURL=webpack:///./src/Model/Monster.js?");

/***/ }),

/***/ "./src/Model/WaterMonster.js":
/*!***********************************!*\
  !*** ./src/Model/WaterMonster.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return WaterMonster; });\n/* harmony import */ var _Monster_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Monster.js */ \"./src/Model/Monster.js\");\n\n'use strict';\nclass WaterMonster extends _Monster_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n  constructor() {\n    super();\n    this.type = 'Water';\n    this.CanSwim = true;\n    this.CanFly = false;\n    this.AmountArms = { ZERO: 0, ONE: 1, TWO: 2, THREE: 3, FOUR: 4, FIVE: 5, SIX: 6, SEVEN: 7, EIGHT: 8 };\n    this.TypeArms = { TENTAKELS: \"Tentakels\", FINNS: \"Finns\" };\n    // max 4  if amountArms is 4 or less, else 0\n    this.AmountFeet = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4 };\n    this.AmountEyes = { 0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8 };\n    this.FurType = { SCALES: \"Scales\", SLIME: \"Slime\" };\n    this.Color = { BLUE: \"Blue\", RED: \"Red\", GREEN: \"Green\" };\n    this.audioFile = \"../src/audioFiles/waterpump.wav\";\n    this.extraPower = 0;\n  }\n\n    updateMonster(parameter, value){\n      switch (parameter) {\n        case \"AmountArms\":\n          this.AmountArms = value;\n          break;\n        case \"ArmType\":\n          this.TypeArms = value;\n          break;\n        case \"AmountFeet\":\n          this.AmountFeet = value;\n          break;\n        case \"AmountEyes\":\n          this.AmountEyes = value;\n          break;\n        case \"FurType\":\n          this.FurType = value;\n          break;\n        case \"Color\":\n          this.Color = value;\n          break;\n        case \"Name\":\n          this.monsterName = value;\n          break;\n        case \"Zone\":\n          this.zone = value;\n          break;\n        case \"Location\":\n          this.location = value;\n          break;\n        case \"Power\":\n          this.power = value;\n          break;\n        case \"ExtraPower\":\n          this.extraPower = value;\n          break;\n        case \"Attack\":\n          this.specialAttack = value;\n          break;\n        default: break;\n      }\n      return this;\n    }\n\n    calculateSpecialStats(temperature, zone, windStrength, weatherCondition){\n      if(weatherCondition.includes(\"Rain\")  ){\n        this.extraPower = 10;\n      }\n      if(zone == \"Dessert\"){\n        this.power -= 5;\n      }\n      if(this.power + this.extraPower > 10){\n        this.specialAttack =\"Water Canon\";\n      }\n\n\n    }\n\n\n\n}\n\n\n\n\n\n\n\n\n//# sourceURL=webpack:///./src/Model/WaterMonster.js?");

/***/ }),

/***/ "./src/Model/WindMonster.js":
/*!**********************************!*\
  !*** ./src/Model/WindMonster.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return WindMonster; });\n/* harmony import */ var _Monster_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Monster.js */ \"./src/Model/Monster.js\");\n\n\n'use strict';\nclass WindMonster extends _Monster_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"] {\n    constructor() {\n        super();\n        this.type = 'Wind';\n        this.AmountArms = 2;\n        this.AmountEyes = 2;\n        this.CanFly = true;\n\n\n        this.TYPE = {WIND: \"Wind\"};\n        this.TypeArms = {WINGS: \"Wings\", CLAWWINGS: \"Claw-Wings\"};\n        this.AmountFeet = {0: 0, 2: 2};\n        this.FurType = {SCALES: \"Scales\", FEATHERS: \"Feathers\"};\n        //only if hair or scales\n        this.CanSwim = false;\n        this.Color = {WHITE: \"White\", BLUE: \"Blue\", PURPLE: \"Purple\"};\n        this.audioFile = \"../src/audioFiles/Whirlwind.wav\";\n\n    }\n\n\n    updateMonster(parameter, value) {\n        switch (parameter) {\n            case \"ArmType\":\n                this.TypeArms = value;\n                break;\n            case \"AmountFeet\":\n                this.AmountFeet = value;\n                break;\n            case \"FurType\":\n                this.FurType = value;\n                break;\n            case \"Color\":\n                this.Color = value;\n                break;\n            case \"Name\":\n                this.monsterName = value;\n                break;\n            case \"Zone\":\n                this.zone = value;\n                break;\n            case \"Location\":\n                this.location = value;\n                break;\n            case \"Power\":\n                this.power = value;\n                break;\n            case \"ExtraPower\":\n                this.extraPower = value;\n                break;\n            case \"Attack\":\n                this.specialAttack = value;\n                break;\n            default:\n                break;\n        }\n\n        return this;\n    }\n\n    calculateSpecialStats(temperature, zone, windStrength, weatherCondition) {\n        if (windStrength > \"7\") {\n            this.extraPower = 10;\n\n        }\n        if (zone == \"jungle\") {\n            this.extraPower = 0;\n            this.power -= 5;\n        }\n\n        if (this.power + this.extraPower > 10) {\n            this.specialAttack = \"Tornado\";\n        }\n    }\n}\n\n\n\n\n//# sourceURL=webpack:///./src/Model/WindMonster.js?");

/***/ }),

/***/ "./src/Model/weatherModel.js":
/*!***********************************!*\
  !*** ./src/Model/weatherModel.js ***!
  \***********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return WeatherModel; });\n\r\n\r\nclass WeatherModel {\r\n    constructor() {\r\n        this.temperature = 0;\r\n        this.windSpeed = 0;\r\n        this.weatherCondition = \"\";\r\n\r\n    }\r\n\r\n    updateWeather(temp, wind, condition) {\r\n        this.temperature = temp;\r\n        this.windSpeed = wind;\r\n        this.weatherCondition = condition;\r\n    }\r\n}\r\n\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/Model/weatherModel.js?");

/***/ }),

/***/ "./src/View/MonsterZooView.js":
/*!************************************!*\
  !*** ./src/View/MonsterZooView.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return MonsterZooView; });\n/* harmony import */ var _configurator_view__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./configurator-view */ \"./src/View/configurator-view.js\");\n\n\n\nclass MonsterZooView {\n    constructor(controller) {\n        this.controller = controller;\n        this.gridSelector = document.querySelector(\".gridSelector\");\n        let playSpace = document.querySelector(\".playSpace\");\n\n        this.gridSelector.append(new Option(\"Jungle\", \"Jungle\"), new Option(\"Desert\", \"Desert\"), new Option(\"North Pole\", \"North Pole\"));\n        this.gridSelector.addEventListener(\"change\", () => this.changeZone(playSpace, this.gridSelector.value));\n\n        this.fillZone(playSpace, \"Jungle\");\n    }\n\n    changeZone(playSpace, value) {\n        while (playSpace.firstChild) {\n            playSpace.removeChild(playSpace.firstChild);\n        }\n        if (value === \"Jungle\") {\n            this.fillZone(playSpace, \"Jungle\");\n            this.controller.recoverBoard(value);\n        }\n        if (value === \"Desert\") {\n            this.fillZone(playSpace, \"Desert\");\n            this.controller.recoverBoard(value);\n        }\n        if (value === \"North Pole\") {\n            this.fillZone(playSpace, \"North Pole\");\n            this.controller.recoverBoard(value);\n        }\n    }\n\n    fillZone(zone, name) {\n        let arr = this.getZone(name);\n        for (let index = 0; index < arr.length; index++) {\n            if (arr[index] === \"1\") {\n                zone.append(this.makeSprite(name, index));\n            } else {\n                let droppable = this.makeBlank(index);\n                droppable.addEventListener('dragover', this.dragOver);\n\n                droppable.addEventListener('drop', this.dragDrop.bind(this));\n                zone.append(droppable);\n            }\n        }\n    }\n\n    dragOver(e) {\n        e.preventDefault()\n    }\n\n    dragDrop(e) {\n        let element = document.querySelector(\".draggedMonster\");\n        if (!e.target.classList.contains(\"monster\")) {\n            e.target.append(element);\n        }\n        element.classList.remove(\"draggedMonster\");\n        let id = e.target.id;\n        // let b = document.createElement(\"AUDIO\");\n        // let m = this.controller.getMonsterInformation(element.title)\n        // b.setAttribute(\"src\", m.audioFile);\n        // element.appendChild(b);\n        // b.play();\n\n        this.checkNeighbours(id);\n        let loc = element.parentElement.id;\n        let m = this.controller.getMonsterInformation(element.title);\n        this.controller.updateMonsterLocation(loc,m);\n        this.controller.saveMonstersInLocalStorage();\n        this.deleteDeleteButton();\n    }\n\n    deleteDeleteButton(){\n        let btn = document.getElementById(\"deleteButton\");\n        if( btn != null){\n            btn.parentElement.removeChild(btn);\n        }\n    }\n\n    checkNeighbours(id) {\n        let i = parseInt(id);\n        let top = document.getElementById(i - 10);\n        let topRight = document.getElementById(i - 9);\n        let right = document.getElementById(i + 1);\n        let bottomRight = document.getElementById(i + 11);\n        let bottom = document.getElementById(i + 10);\n        let bottomLeft = document.getElementById(i + 9);\n        let left = document.getElementById(i - 1);\n        let topLeft = document.getElementById(i - 11);\n\n\n        let neighbours = [top, topRight, right, bottomRight, bottom, bottomLeft, left, topLeft];\n\n        for (let i = 0; i < neighbours.length; i++) {\n            if (neighbours[i] != null) {\n\n\n                let ntc = neighbours[i].firstChild;\n                if (ntc != null) {\n                    let type = ntc.title;\n                    let monsters = this.controller.monstersInZoo;\n                    for (let i = 0; i < monsters.length; i++) {\n\n                        if (type === monsters[i].getMonsterInformation()) {\n                            this.animateCSS(ntc, 'bounce');\n                        }\n                    }\n\n                }\n            }\n        }\n    }\n\n    animateCSS(element, animationName, callback) {\n        let node = element;\n        node.classList.add('animated', animationName)\n\n        function handleAnimationEnd() {\n            node.classList.remove('animated', animationName)\n            node.removeEventListener('animationend', handleAnimationEnd)\n\n            if (typeof callback === 'function') callback()\n        }\n\n        node.addEventListener('animationend', handleAnimationEnd)\n    }\n\n    getZone(zone) {\n        var array;\n        switch (zone) {\n            case \"Jungle\":\n                arrayn                break;\n            case \"Desert\":\n                arrayn                break;\n            case \"North Pole\":\n                arrayn                break;\n        }\n        return array;\n    }\n\n    makeSprite(zone, id) {\n        let undroppable = document.createElement('canvas');\n        let ctx = undroppable.getContext(\"2d\");\n        ctx.canvas.height = 100;\n        ctx.canvas.width = 100;\n        let grd = ctx.createRadialGradient(70, 50, 5, 90, 60, 100);\n        switch (zone) {\n            case \"Jungle\":\n                grd.addColorStop(0, \"green\");\n                ctx.fillStyle = grd;\n                ctx.fillRect(0, 0, 98, 98);\n                break;\n            case \"Desert\":\n                grd.addColorStop(0, \"yellow\");\n                ctx.fillStyle = grd;\n                ctx.fillRect(0, 0, 98, 98);\n                break;\n            case \"North Pole\":\n                grd.addColorStop(0, \"cyan\");\n                ctx.fillStyle = grd;\n                ctx.fillRect(0, 0, 98, 98);\n                break;\n        }\n        let div = document.createElement('div');\n        div.classList.add(\"undroppable\");\n        div.setAttribute(\"id\", id);\n\n        div.append(undroppable);\n        return div;\n    }\n\n    makeBlank(id) {\n        let div = document.createElement('div');\n        div.classList.add(\"droppable\");\n        div.setAttribute(\"id\", id);\n        return div;\n    }\n}\n\n//# sourceURL=webpack:///./src/View/MonsterZooView.js?");

/***/ }),

/***/ "./src/View/configurator-view.js":
/*!***************************************!*\
  !*** ./src/View/configurator-view.js ***!
  \***************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return configuratorView; });\n\n\nclass configuratorView {\n    constructor(controller) {\n        this.controller = controller;\n        this.addDeleteEvent();\n        this.generateTypeList();\n    }\n\n    generateNameField() {\n        let controller = this.controller;\n        let config = document.querySelector('#configurator');\n        let field = document.createElement(\"INPUT\");\n        field.setAttribute(\"id\", \"Name\");\n        let nameLabel = document.createElement(\"LABEL\");\n        let text = document.createTextNode(\"Monster Name: \");\n        nameLabel.appendChild(text);\n        nameLabel.setAttribute(\"id\", \"formLabel\");\n        config.appendChild(nameLabel);\n        config.appendChild(field);\n    }\n\n    generateMakeMonsterButton() {\n        let controller = this.controller;\n        let config = document.querySelector('#configurator')\n        let button = document.createElement(\"BUTTON\");\n        button.setAttribute(\"id\", \"monsterMakeButton\");\n        let buttonLabel = document.createTextNode(\"Make Monster\");\n        button.appendChild(buttonLabel);\n\n        let type = document.getElementById(\"typeSelect\").value;\n\n        let pokemon;\n        switch (type) {\n            case \"WaterType\":\n                pokemon = 'https://pokeapi.co/api/v2/pokemon/382';\n                break;\n            case \"FireType\":\n                pokemon = 'https://pokeapi.co/api/v2/pokemon/383';\n                break;\n            case \"EarthType\":\n                pokemon = 'https://pokeapi.co/api/v2/pokemon/95';\n                break;\n            case \"WindType\":\n                pokemon = 'https://pokeapi.co/api/v2/pokemon/384';\n                break;\n        }\n\n        button.addEventListener(\"click\", () => this.createMonster(controller, pokemon));\n        config.appendChild(button);\n    }\n\n    RecoverMonster(monster) {\n        let pokemon;\n        switch (monster.type) {\n            case \"Water\":\n                pokemon = 'https://pokeapi.co/api/v2/pokemon/382';\n                break;\n            case \"Fire\":\n                pokemon = 'https://pokeapi.co/api/v2/pokemon/383';\n                break;\n            case \"Earth\":\n                pokemon = 'https://pokeapi.co/api/v2/pokemon/95';\n                break;\n            case \"Wind\":\n                pokemon = 'https://pokeapi.co/api/v2/pokemon/384';\n                break;\n        }\n        let monsterToCreate = document.getElementById(monster.location);\n        let dragAble = document.createElement(\"img\");\n        dragAble.setAttribute(\"id\", \"monster\");\n        dragAble.classList.add(\"monster\");\n        dragAble.setAttribute(\"draggable\", \"true\");\n        dragAble.addEventListener('dragstart', this.dragStart);\n        monsterToCreate.appendChild(dragAble);\n        dragAble.setAttribute(\"title\", monster.getMonsterInformation());\n        fetch(pokemon) //pokemon number\n            .then(response => response.json())\n            .then(data => {\n                dragAble.setAttribute(\"src\", data.sprites.front_default);\n            })\n            .catch(error => console.error(error));\n    }\n\n    generateForm() {\n        let aArms = document.getElementById('AmountArms');\n        if (typeof (aArms) != 'undefined' && aArms != null) {\n\n            let aType = document.getElementById('ArmType');\n            let aFeet = document.getElementById('AmountFeet');\n            let aEyes = document.getElementById('AmountEyes');\n            let furType = document.getElementById('FurType');\n            let fly = document.getElementById('Fly');\n            let canSwim = document.getElementById('Swim');\n            let color = document.getElementById('Color');\n            let textField = document.getElementById('Name');\n\n            color.parentNode.removeChild(color);\n            canSwim.parentNode.removeChild(canSwim);\n            fly.parentNode.removeChild(fly);\n            furType.parentNode.removeChild(furType);\n            aEyes.parentNode.removeChild(aEyes);\n            aFeet.parentNode.removeChild(aFeet);\n            aArms.parentNode.removeChild(aArms);\n            aType.parentNode.removeChild(aType);\n            textField.parentNode.removeChild(textField);\n            let img = document.getElementById('div1').firstChild;\n            if (img != 'undefined' && img != null) {\n                img.parentNode.removeChild(img);\n            }\n            let labels = document.getElementById(\"formLabel\");\n\n            while (labels != undefined || labels != null) {\n                labels.parentElement.removeChild(labels);\n                labels = document.getElementById(\"formLabel\");\n            }\n            let btn = document.getElementById(\"monsterMakeButton\");\n            btn.parentElement.removeChild(btn);\n        }\n\n        this.generateSelects();\n        this.generateAmountArmList();\n        this.generateTypeArmsList();\n        this.generateAmountFeetList();\n        this.generateAmountEyesList();\n        this.generateFurType();\n        this.generateCanFlyButton();\n        this.generateCanSwimButton();\n        this.generateColorList();\n        this.generateNameField();\n        this.generateMakeMonsterButton();\n    }\n\n    checkNameInput() {\n        return this.controller.checkMonsterName(document.getElementById(\"Name\").value);\n    }\n\n    createMonster(controller, pokemon) {\n        if(this.checkNameInput()){\n            alert(\"please use another Monster name!\");\n            return;\n        }\n        if (document.getElementById('div1').firstChild != null) {\n            let m = document.getElementById('div1').firstChild;\n            m.parentElement.removeChild(m);\n        }\n        let dragAble = document.createElement(\"img\");\n        dragAble.setAttribute(\"id\", \"monster\");\n        let spawn = document.getElementsByName(\"spawn\")[0];\n        dragAble.classList.add(\"monster\");\n        dragAble.setAttribute(\"draggable\", \"true\");\n        dragAble.addEventListener('dragstart', this.dragStart);\n        spawn.appendChild(dragAble);\n        controller.updateMonster();\n        dragAble.setAttribute(\"title\", controller.monster.getMonsterInformation());\n\n        fetch(pokemon) //pokemon number\n            .then(response => response.json())\n            .then(data => {\n                dragAble.setAttribute(\"src\", data.sprites.front_default);\n            })\n            .catch(error => console.error(error));\n        this.controller.updateMonster();\n    }\n\n    addDeleteEvent() {\n        let beginPoint = document.getElementById('div1');\n        beginPoint.addEventListener('dragover', this.dragOver);\n        beginPoint.addEventListener('drop', this.spawnDrop.bind(this));\n    }\n\n    dragStart(e) {\n        e.target.classList.add(\"draggedMonster\");\n    }\n\n    dragOver(e) {\n        e.preventDefault()\n    }\n\n    spawnDrop(e) {\n        let element = document.querySelector(\".draggedMonster\");\n        if (!e.target.classList.contains(\"monster\")) {\n            e.target.append(element);\n            this.makeDeleteButton();\n        }\n        element.classList.remove(\"draggedMonster\");\n\n\n\n\n    }\n\n    makeDeleteButton() {\n        let controller = this.controller;\n        let config = document.querySelector('#configurator')\n        let button = document.createElement(\"BUTTON\");\n        button.setAttribute(\"id\", \"deleteButton\");\n        let buttonLabel = document.createTextNode(\"Delete Monster\");\n        button.appendChild(buttonLabel);\n\n        button.addEventListener(\"click\", () => this.deleteMonster());\n        config.appendChild(button);\n    }\n\n    deleteMonster() {\n\n        let monsterHolder = document.getElementById(\"div1\").firstChild;\n        if (monsterHolder != undefined) {\n\n            this.controller.deleteMonster(monsterHolder.title);\n            monsterHolder.parentElement.removeChild(monsterHolder);\n            let btn = document.getElementById('deleteButton');\n            btn.parentElement.removeChild(btn);\n        }\n    }\n\n    generateTypeList() {\n\n        let controller = this.controller;\n        let config = document.querySelector('#configurator')\n        let label = document.createElement(\"LABEL\");\n        let labelText = document.createTextNode(\"Type: \");\n        label.appendChild(labelText);\n        config.appendChild(label);\n        let select = document.createElement(\"SELECT\");\n\n        select.setAttribute(\"id\", \"typeSelect\");\n        select.addEventListener('change', function () {\n            controller.CreateMonsterConfigurator(this.value);\n\n        });\n        config.appendChild(select);\n        select.addEventListener(\"change\", this.generateForm.bind(this));\n        let zeroOpt = document.createElement(\"option\");\n        zeroOpt.setAttribute(\"value\", \"zeroType\");\n        let zeroText = document.createTextNode(\"choose a type\");\n        zeroOpt.appendChild(zeroText);\n        select.appendChild(zeroOpt);\n        let waterOpt = document.createElement(\"option\");\n        waterOpt.setAttribute(\"value\", \"WaterType\");\n        let waterText = document.createTextNode('Water');\n        waterOpt.appendChild(waterText);\n        select.appendChild(waterOpt);\n        let fireOpt = document.createElement(\"option\");\n        fireOpt.setAttribute(\"value\", \"FireType\");\n        let fireText = document.createTextNode('Fire');\n        fireOpt.appendChild(fireText);\n        select.appendChild(fireOpt);\n        let earthOpt = document.createElement(\"option\");\n        earthOpt.setAttribute(\"value\", \"EarthType\");\n        let earthText = document.createTextNode('Earth');\n        earthOpt.appendChild(earthText);\n        select.appendChild(earthOpt);\n        let windOpt = document.createElement(\"option\");\n        windOpt.setAttribute(\"value\", \"WindType\");\n        let windText = document.createTextNode('Wind');\n        windOpt.appendChild(windText);\n        select.appendChild(windOpt);\n    }\n\n    generateSelects() {\n        let controller = this.controller;\n        let config = document.querySelector('#configurator')\n        let aArmLabel = document.createElement(\"LABEL\");\n        aArmLabel.setAttribute(\"id\", \"formLabel\");\n        let aArmText = document.createTextNode(\"Amount arms: \");\n        aArmLabel.appendChild(aArmText);\n        let amountArmSelect = document.createElement(\"SELECT\");\n        amountArmSelect.setAttribute(\"id\", \"AmountArms\");\n        let armTypeLabel = document.createElement(\"LABEL\");\n        armTypeLabel.setAttribute(\"id\", \"formLabel\");\n\n        let armTypeText = document.createTextNode(\"Arm type: \");\n        armTypeLabel.appendChild(armTypeText);\n\n        let armTypeSelect = document.createElement(\"SELECT\");\n        armTypeSelect.setAttribute(\"id\", \"ArmType\");\n        let amountFeetLabel = document.createElement(\"LABEL\");\n        amountFeetLabel.setAttribute(\"id\", \"formLabel\");\n\n        let amountFeetText = document.createTextNode(\"Amount Feet: \");\n        amountFeetLabel.appendChild(amountFeetText);\n\n        let amountFeet = document.createElement(\"SELECT\");\n        amountFeet.setAttribute(\"id\", \"AmountFeet\");\n\n        let eyesLabel = document.createElement(\"LABEL\");\n        eyesLabel.setAttribute(\"id\", \"formLabel\");\n\n        let eyesText = document.createTextNode(\"Amount Eyes: \");\n        eyesLabel.appendChild(eyesText);\n\n        let eyes = document.createElement(\"SELECT\");\n        eyes.setAttribute(\"id\", \"AmountEyes\");\n\n        let furLabel = document.createElement(\"LABEL\");\n        furLabel.setAttribute(\"id\", \"formLabel\");\n\n        let furText = document.createTextNode(\"Fur type: \");\n        furLabel.appendChild(furText);\n\n        let fur = document.createElement(\"SELECT\");\n        fur.setAttribute(\"id\", \"FurType\");\n\n        let flyLabel = document.createElement(\"LABEL\");\n        flyLabel.setAttribute(\"id\", \"formLabel\");\n\n        let flyText = document.createTextNode(\"Can fly: \");\n        flyLabel.appendChild(flyText);\n\n        let fly = document.createElement(\"SELECT\");\n        fly.setAttribute(\"id\", \"Fly\");\n\n        let swimLabel = document.createElement(\"LABEL\");\n        swimLabel.setAttribute(\"id\", \"formLabel\");\n\n        let swimText = document.createTextNode(\"Can swim: \");\n        swimLabel.appendChild(swimText);\n\n        let swim = document.createElement(\"SELECT\");\n        swim.setAttribute(\"id\", \"Swim\");\n\n        let colorLabel = document.createElement(\"LABEL\");\n        colorLabel.setAttribute(\"id\", \"formLabel\");\n\n        let colorText = document.createTextNode(\"Color: \");\n        colorLabel.appendChild(colorText);\n\n        let color = document.createElement(\"SELECT\");\n        color.setAttribute(\"id\", \"Color\");\n\n        config.appendChild(aArmLabel);\n        config.appendChild(amountArmSelect);\n        config.appendChild(armTypeLabel);\n        config.appendChild(armTypeSelect);\n        config.appendChild(amountFeetLabel);\n        config.appendChild(amountFeet);\n        config.appendChild(eyesLabel);\n        config.appendChild(eyes);\n        config.appendChild(furLabel);\n        config.appendChild(fur);\n        config.appendChild(flyLabel);\n        config.appendChild(fly);\n        config.appendChild(swimLabel);\n        config.appendChild(swim);\n        config.appendChild(colorLabel);\n        config.appendChild(color);\n    }\n\n    generateAmountArmList() {\n        let select = document.getElementById(\"AmountArms\");\n        if (select.hasChildNodes()) {\n            let myNode = select\n            let firstChild = myNode.firstChild;\n\n            while (firstChild) {\n                myNode.removeChild(firstChild);\n                firstChild = myNode.firstChild;\n            }\n        }\n        let type = document.getElementById(\"typeSelect\").value;\n        select.addEventListener(\"change\", this.generateAmountFeetList.bind(this));\n        switch (type) {\n            case \"WaterType\":\n                let array = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"]\n                for (let i = 0; i < array.length; i++) {\n                    let option = document.createElement(\"option\");\n                    option.setAttribute(\"value\", i);\n                    let text = document.createTextNode(i);\n                    option.appendChild(text);\n                    select.appendChild(option);\n                }\n                break;\n            case \"FireType\":\n                let array2 = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\"]\n                for (let i = 0; i < array2.length; i++) {\n                    let option2 = document.createElement(\"option\");\n                    option2.setAttribute(\"value\", i);\n                    let text2 = document.createTextNode(i);\n                    option2.appendChild(text2);\n                    select.appendChild(option2);\n                }\n                break;\n            case \"EarthType\":\n                let option3 = document.createElement(\"option\");\n                option3.setAttribute(\"value\", \"2\");\n                let text3 = document.createTextNode(2);\n                option3.appendChild(text3);\n                select.appendChild(option3);\n                break;\n            case \"WindType\":\n                let option4 = document.createElement(\"option\");\n                option4.setAttribute(\"value\", \"2\");\n                let text4 = document.createTextNode(2);\n                option4.appendChild(text4);\n                select.appendChild(option4);\n                break;\n            default:\n        }\n    }\n\n    generateTypeArmsList() {\n        let select = document.getElementById(\"ArmType\");\n\n        if (select.hasChildNodes()) {\n            let myNode = select\n            let firstChild = myNode.firstChild;\n\n            while (firstChild) {\n                myNode.removeChild(firstChild);\n                firstChild = myNode.firstChild;\n            }\n        }\n        let selectedType = document.getElementById(\"typeSelect\").value\n\n        switch (selectedType) {\n            case \"WaterType\":\n                let array = [\"Tentakels\", \"Finns\"]\n                for (let i = 0; i < array.length; i++) {\n                    let option = document.createElement(\"option\");\n                    option.setAttribute(\"value\", array[i]);\n                    let text = document.createTextNode(array[i]);\n                    option.appendChild(text);\n                    select.appendChild(option);\n                }\n                break;\n            case \"FireType\":\n                let array2 = [\"Tentakels\", \"Claws\", \"Claw-Wings\"]\n                for (let i = 0; i < array2.length; i++) {\n                    let option = document.createElement(\"option\");\n                    option.setAttribute(\"value\", array2[i]);\n                    let text = document.createTextNode(array2[i]);\n                    option.appendChild(text);\n                    select.appendChild(option);\n                }\n                break;\n            case \"EarthType\":\n                let option = document.createElement(\"option\");\n                option.setAttribute(\"value\", \"Claws\");\n                let text = document.createTextNode(\"Claws\");\n                option.appendChild(text);\n                select.appendChild(option);\n                break;\n            case \"WindType\":\n                let array3 = [\"Wings\", \"Claw-Wings\"]\n                for (let i = 0; i < array3.length; i++) {\n                    let option = document.createElement(\"option\");\n                    option.setAttribute(\"value\", array3[i]);\n                    let text = document.createTextNode(array3[i]);\n                    option.appendChild(text);\n                    select.appendChild(option);\n                }\n                break;\n            default:\n        }\n    }\n\n    generateAmountFeetList() {\n        let select = document.getElementById(\"AmountFeet\");\n        if (select.hasChildNodes()) {\n            let myNode = select\n            let firstChild = myNode.firstChild;\n\n            while (firstChild) {\n                myNode.removeChild(firstChild);\n                firstChild = myNode.firstChild;\n            }\n        }\n        let selectedType = document.getElementById(\"typeSelect\").value\n\n        switch (selectedType) {\n            case \"WaterType\":\n\n                if (document.getElementById(\"AmountArms\").value <= 4) {\n                    let array = [\"one\", \"two\", \"three\", \"four\"];\n                    for (let i = 0; i < array.length; i++) {\n                        let option = document.createElement(\"option\");\n                        option.setAttribute(\"value\", array[i]);\n                        let text = document.createTextNode(array[i]);\n                        option.appendChild(text);\n                        select.appendChild(option);\n                    }\n                } else {\n                    let option = document.createElement(\"option\");\n                    option.setAttribute(\"value\", \"zero\");\n                    let text = document.createTextNode(0);\n                    option.appendChild(text);\n                    select.appendChild(option);\n                }\n                break;\n            case \"FireType\":\n                if (document.getElementById(\"AmountArms\").value <= 2) {\n                    let option2 = document.createElement(\"option\");\n                    option2.setAttribute(\"value\", \"two\");\n                    let text2 = document.createTextNode(2);\n                    option2.appendChild(text2);\n                    select.appendChild(option2);\n                } else {\n                    let option2 = document.createElement(\"option\");\n                    option2.setAttribute(\"value\", \"zero\");\n                    let text2 = document.createTextNode(0);\n                    option2.appendChild(text2);\n                    select.appendChild(option2);\n                }\n                break;\n            case \"EarthType\":\n                let array2 = [\"two\", \"four\", \"six\"];\n                for (let i = 0; i < array2.length; i++) {\n                    let option3 = document.createElement(\"option\");\n                    option3.setAttribute(\"value\", array2[i]);\n                    let text3 = document.createTextNode(array2[i]);\n                    option3.appendChild(text3);\n                    select.appendChild(option3);\n                }\n                break;\n            case \"WindType\":\n                let array3 = [\"zero\", \"two\"];\n                for (let i = 0; i < array3.length; i++) {\n                    let option4 = document.createElement(\"option\");\n                    option4.setAttribute(\"value\", array3[i]);\n                    let text4 = document.createTextNode(array3[i]);\n                    option4.appendChild(text4);\n                    select.appendChild(option4);\n                }\n                break;\n            default:\n        }\n    }\n\n    generateAmountEyesList() {\n\n        let select = document.getElementById(\"AmountEyes\");\n        if (select.hasChildNodes()) {\n            let myNode = select\n            let firstChild = myNode.firstChild;\n\n            while (firstChild) {\n                myNode.removeChild(firstChild);\n                firstChild = myNode.firstChild;\n            }\n        }\n        let type = document.getElementById(\"typeSelect\").value;\n        switch (type) {\n            case \"WaterType\":\n                let array = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\"]\n                for (let i = 0; i < array.length; i++) {\n                    let option = document.createElement(\"option\");\n                    option.setAttribute(\"value\", i);\n                    let text = document.createTextNode(i);\n                    option.appendChild(text);\n                    select.appendChild(option);\n                }\n                break;\n            case \"FireType\":\n                let array2 = [\"zero\", \"one\", \"two\", \"three\", \"four\"]\n                for (let i = 0; i < array2.length; i++) {\n                    let option2 = document.createElement(\"option\");\n                    option2.setAttribute(\"value\", i);\n                    let text2 = document.createTextNode(i);\n                    option2.appendChild(text2);\n                    select.appendChild(option2);\n                }\n                break;\n            case \"EarthType\":\n                let option3 = document.createElement(\"option\");\n                option3.setAttribute(\"value\", \"two\");\n                let text3 = document.createTextNode(2);\n                option3.appendChild(text3);\n                select.appendChild(option3);\n                break;\n            case \"WindType\":\n                let option4 = document.createElement(\"option\");\n                option4.setAttribute(\"value\", \"two\");\n                let text4 = document.createTextNode(2);\n                option4.appendChild(text4);\n                select.appendChild(option4);\n                break;\n            default:\n        }\n    }\n\n    generateFurType() {\n        let select = document.getElementById(\"FurType\");\n        if (select.hasChildNodes()) {\n            let myNode = select\n            let firstChild = myNode.firstChild;\n\n            while (firstChild) {\n                myNode.removeChild(firstChild);\n                firstChild = myNode.firstChild;\n            }\n        }\n        let type = document.getElementById(\"typeSelect\").value;\n        switch (type) {\n            case \"WaterType\":\n                let array = [\"Scales\", \"Slime\"]\n                for (let i = 0; i < array.length; i++) {\n                    let option = document.createElement(\"option\");\n                    option.setAttribute(\"value\", array[i]);\n                    let text = document.createTextNode(array[i]);\n                    option.appendChild(text);\n                    select.appendChild(option);\n                }\n                break;\n            case \"FireType\":\n                let array2 = [\"Scales\", \"Feathers\"]\n                for (let i = 0; i < array2.length; i++) {\n                    let option2 = document.createElement(\"option\");\n                    option2.setAttribute(\"value\", array2[i]);\n                    let text2 = document.createTextNode(array2[i]);\n                    option2.appendChild(text2);\n                    select.appendChild(option2);\n                }\n                select.addEventListener(\"change\", this.generateCanFlyButton.bind(this));\n\n                break;\n            case \"EarthType\":\n                let array3 = [\"Hair\", \"Scales\", \"Slime\"]\n                for (let i = 0; i < array3.length; i++) {\n                    let option3 = document.createElement(\"option\");\n                    option3.setAttribute(\"value\", array3[i]);\n                    let text3 = document.createTextNode(array3[i]);\n                    option3.appendChild(text3);\n                    select.appendChild(option3);\n                }\n                break;\n            case \"WindType\":\n                let array4 = [\"Feathers\", \"Hair\", \"Scales\"]\n                for (let i = 0; i < array4.length; i++) {\n                    let option4 = document.createElement(\"option\");\n                    option4.setAttribute(\"value\", array4[i]);\n                    let text4 = document.createTextNode(array4[i]);\n                    option4.appendChild(text4);\n                    select.appendChild(option4);\n                }\n                select.addEventListener(\"change\", this.generateCanSwimButton.bind(this));\n                break;\n            default:\n        }\n    }\n\n    generateCanFlyButton() {\n        let select = document.getElementById(\"Fly\");\n        if (select.hasChildNodes()) {\n            let myNode = select\n            let firstChild = myNode.firstChild;\n\n            while (firstChild) {\n                myNode.removeChild(firstChild);\n                firstChild = myNode.firstChild;\n            }\n        }\n        let type = document.getElementById(\"typeSelect\").value;\n        switch (type) {\n            case \"WaterType\":\n                let option = document.createElement(\"option\");\n                option.setAttribute(\"value\", 0);\n                let text = document.createTextNode(\"no\");\n                option.appendChild(text);\n                select.appendChild(option);\n                break;\n            case \"FireType\":\n                if (document.getElementById(\"FurType\").value == \"Feathers\") {\n                    let array = [\"no\", \"yes\"];\n                    for (let i = 0; i < array.length; i++) {\n                        let option2 = document.createElement(\"option\");\n                        option2.setAttribute(\"value\", i);\n                        let text2 = document.createTextNode(array[i]);\n                        option2.appendChild(text2);\n                        select.appendChild(option2);\n                    }\n                }\n                else{\n                    let option2 = document.createElement(\"option\");\n                    option2.setAttribute(\"value\",1 );\n                    let text2 = document.createTextNode(\"no\");\n                    option2.appendChild(text2);\n                    select.appendChild(option2);\n                }\n                break;\n            case \"EarthType\":\n                let option3 = document.createElement(\"option\");\n                option3.setAttribute(\"value\", 0);\n                let text3 = document.createTextNode(\"no\");\n                option3.appendChild(text3);\n                select.appendChild(option3);\n                break;\n            case \"WindType\":\n                let option4 = document.createElement(\"option\");\n                option4.setAttribute(\"value\", 1);\n                let text4 = document.createTextNode(\"yes\");\n                option4.appendChild(text4);\n                select.appendChild(option4);\n                break;\n            default:\n        }\n    }\n\n    generateCanSwimButton() {\n        let select = document.getElementById(\"Swim\");\n        if (select.hasChildNodes()) {\n            let myNode = select\n            let firstChild = myNode.firstChild;\n\n            while (firstChild) {\n                myNode.removeChild(firstChild);\n                firstChild = myNode.firstChild;\n            }\n        }\n        let type = document.getElementById(\"typeSelect\").value;\n        switch (type) {\n            case \"WaterType\":\n                let option = document.createElement(\"option\");\n                option.setAttribute(\"value\", 1);\n                let text = document.createTextNode(\"yes\");\n                option.appendChild(text);\n                select.appendChild(option);\n                break;\n            case \"FireType\":\n                let option2 = document.createElement(\"option\");\n                option2.setAttribute(\"value\", 0);\n                let text2 = document.createTextNode(\"no\");\n                option2.appendChild(text2);\n                select.appendChild(option2);\n                break;\n            case \"EarthType\":\n                let option3 = document.createElement(\"option\");\n                option3.setAttribute(\"value\", 0);\n                let text3 = document.createTextNode(\"no\");\n                option3.appendChild(text3);\n                select.appendChild(option3);\n                break;\n            case \"WindType\":\n                if (document.getElementById(\"FurType\").value === \"Hair\" || document.getElementById(\"FurType\").value === \"Scales\") {\n                    let array = [\"no\", \"yes\"];\n                    for (let i = 0; i < array.length; i++) {\n                        let option4 = document.createElement(\"option\");\n                        option4.setAttribute(\"value\", i);\n                        let text4 = document.createTextNode(array[i]);\n                        option4.appendChild(text4);\n                        select.appendChild(option4);\n                    }\n                } else {\n                    let option4 = document.createElement(\"option\");\n                    option4.setAttribute(\"value\", 0);\n                    let text4 = document.createTextNode(\"no\");\n                    option4.appendChild(text4);\n                    select.appendChild(option4);\n                }\n                break;\n            default:\n        }\n    }\n\n    generateColorList() {\n        let select = document.getElementById(\"Color\");\n        if (select.hasChildNodes()) {\n            let myNode = select\n            let firstChild = myNode.firstChild;\n\n            while (firstChild) {\n                myNode.removeChild(firstChild);\n                firstChild = myNode.firstChild;\n            }\n        }\n        let type = document.getElementById(\"typeSelect\").value;\n        switch (type) {\n            case \"WaterType\":\n                let array = [\"Blue\", \"Red\", \"Green\"];\n                for (let i = 0; i < array.length; i++) {\n                    let option = document.createElement(\"option\");\n                    option.setAttribute(\"value\", array[i]);\n                    let text = document.createTextNode(array[i]);\n                    option.appendChild(text);\n                    select.appendChild(option);\n                }\n                break;\n            case \"FireType\":\n                let array2 = [\"Red\", \"Orange\", \"Brown\"];\n                for (let i = 0; i < array2.length; i++) {\n                    let option2 = document.createElement(\"option\");\n                    option2.setAttribute(\"value\", array2[i]);\n                    let text2 = document.createTextNode(array2[i]);\n                    option2.appendChild(text2);\n                    select.appendChild(option2);\n                }\n                break;\n            case \"EarthType\":\n                let array3 = [\"Purple\", \"Ornage\", \"White\"];\n                for (let i = 0; i < array3.length; i++) {\n                    let option3 = document.createElement(\"option\");\n                    option3.setAttribute(\"value\", array3[i]);\n                    let text3 = document.createTextNode(array3[i]);\n                    option3.appendChild(text3);\n                    select.appendChild(option3);\n                }\n                break;\n            case \"WindType\":\n                let array4 = [\"White\", \"Blue\", \"Purple\"];\n                for (let i = 0; i < array4.length; i++) {\n                    let option4 = document.createElement(\"option\");\n                    option4.setAttribute(\"value\", array4[i]);\n                    let text4 = document.createTextNode(array4[i]);\n                    option4.appendChild(text4);\n                    select.appendChild(option4);\n                }\n                break;\n            default:\n        }\n    }\n}\n\n\n//# sourceURL=webpack:///./src/View/configurator-view.js?");

/***/ }),

/***/ "./src/View/weather-view.js":
/*!**********************************!*\
  !*** ./src/View/weather-view.js ***!
  \**********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return weatherview; });\n\r\n\r\nclass weatherview {\r\n\r\n    constructor(controller) {\r\n        this.controller = controller;\r\n        this.makeDiv();\r\n        this.addListener();\r\n        this.weatherForecast();\r\n    }\r\n\r\n    weatherForecast() {\r\n\r\n        let link = \"https://api.openweathermap.org/data/2.5/weather?q=\" + this.getLocation() + \"&appid=\" + \"6a0ac16bdae81d37be7c4643a5bdee01\" + \"&units=metric\";\r\n        this.httpRequestAsync(link, this.response);\r\n    }\r\n\r\n    addListener() {\r\n        let me = this;\r\n        let location = document.getElementById(\"gridSelect\");\r\n        location.addEventListener(\"change\", function () {\r\n            me.weatherForecast();\r\n        })\r\n\r\n    }\r\n\r\n\r\n    getLocation() {\r\n        let location = document.getElementById(\"gridSelect\");\r\n        switch (location.options[location.selectedIndex].text) {\r\n            case \"Jungle\":\r\n                return \"Borneo\";\r\n            case \"Desert\":\r\n                return \"Sahara\";\r\n            case \"North Pole\":\r\n                return \"McMurdo Station\";\r\n            default:\r\n                return \"Borneo\"\r\n        }\r\n    }\r\n\r\n    response(response, controller) {\r\n        let contrl = controller;\r\n        let jsonObject = JSON.parse(response);\r\n        let icon = document.getElementById(\"icon\");\r\n        icon.src = \"http://openweathermap.org/img/w/\" + jsonObject.weather[0].icon + \".png\";\r\n        let temp = document.getElementById(\"temp\");\r\n        if (temp.hasChildNodes()) {\r\n            let text = temp.childNodes[0];\r\n            temp.removeChild(text);\r\n        }\r\n        let temper = parseInt(jsonObject.main.temp) + \"\";\r\n        let labelText = document.createTextNode(temper + \"°\" + \"C\");\r\n        temp.appendChild(labelText);\r\n        contrl.updateWeather(jsonObject);\r\n    }\r\n\r\n    httpRequestAsync(url, callback) {\r\n        let controller = this.controller;\r\n        var httpRequest = new XMLHttpRequest();\r\n        httpRequest.onreadystatechange = () => {\r\n            if (httpRequest.readyState == 4 && httpRequest.status == 200) {\r\n                callback(httpRequest.responseText, controller);\r\n            }\r\n\r\n        }\r\n        httpRequest.open(\"GET\", url, true); // true for asynchronous\r\n        httpRequest.send();\r\n    }\r\n\r\n    makeDiv() {\r\n        let parent = document.getElementById(\"panel\");\r\n        let content = document.createElement(\"DIV\");\r\n        content.setAttribute(\"id\", \"weather\");\r\n        let icon = document.createElement(\"IMG\");\r\n        icon.setAttribute(\"src\", \"\");\r\n        icon.setAttribute(\"id\", \"icon\");\r\n        let label = document.createElement(\"LABEL\");\r\n        label.setAttribute(\"id\", \"temp\");\r\n        content.appendChild(label);\r\n        content.appendChild(icon);\r\n        parent.appendChild(content);\r\n    }\r\n}\r\n\n\n//# sourceURL=webpack:///./src/View/weather-view.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _Controller_MainController_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Controller/MainController.js */ \"./src/Controller/MainController.js\");\n\n\nnew _Controller_MainController_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ })

/******/ });